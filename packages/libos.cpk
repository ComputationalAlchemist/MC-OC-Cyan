{version="0.1",depends={"init"},conflicts={},contents={["/boot/01_os.lua"]="local computer = require(\"computer\")\13\nlocal event = require(\"event\")\13\nlocal fs = require(\"filesystem\")\13\nlocal shell = require(\"shell\")\13\nlocal unicode = require(\"unicode\")\13\n\13\nlocal env = {\13\n  EDITOR=\"/bin/edit\",\13\n  HISTSIZE=\"10\",\13\n  HOME=\"/home\",\13\n  IFS=\" \",\13\n  MANPATH=\"/usr/man:.\",\13\n  PAGER=\"/bin/more\",\13\n  PATH=\"/bin:/usr/bin:/home/bin:.\",\13\n  PS1=\"$PWD# \",\13\n  PWD=\"/\",\13\n  SHELL=\"/bin/sh\",\13\n  TMP=\"/tmp\", -- Deprecated\13\n  TMPDIR=\"/tmp\"\13\n}\13\n\13\nos.execute = function(command)\13\n  if not command then\13\n    return type(shell) == \"table\"\13\n  end\13\n  return shell.execute(command)\13\nend\13\n\13\nfunction os.exit(code)\13\n  error({reason=\"terminated\", code=code~=false}, 0)\13\nend\13\n\13\nfunction os.getenv(varname)\13\n  if varname == '#' then\13\n    return #env\13\n  elseif varname ~= nil then\13\n    return env[varname]\13\n  else\13\n    return env\13\n  end\13\nend\13\n\13\nfunction os.setenv(varname, value)\13\n  checkArg(1, varname, \"string\", \"number\")\13\n  if value == nil then\13\n    env[varname] = nil\13\n  else\13\n    local success, val = pcall(tostring, value)\13\n    if success then\13\n      env[varname] = val\13\n      return env[varname]\13\n    else\13\n      return nil, val\13\n    end\13\n  end\13\nend\13\n\13\nfunction os.remove(...)\13\n  return fs.remove(...)\13\nend\13\n\13\nfunction os.rename(...)\13\n  return fs.rename(...)\13\nend\13\n\13\nfunction os.tmpname()\13\n  local path = os.getenv(\"TMPDIR\") or \"/tmp\"\13\n  if fs.exists(path) then\13\n    for i = 1, 10 do\13\n      local name = fs.concat(path, tostring(math.random(1, 0x7FFFFFFF)))\13\n      if not fs.exists(name) then\13\n        return name\13\n      end\13\n    end\13\n  end\13\nend\13\n\13\nif computer.tmpAddress() then\13\n  fs.mount(computer.tmpAddress(), os.getenv(\"TMPDIR\") or \"/tmp\")\13\nend\13\n"},name="libos"}