{contents={["/boot/90_filesystem.lua"]="local component = require(\"component\")\13\nlocal event = require(\"event\")\13\nlocal fs = require(\"filesystem\")\13\nlocal shell = require(\"shell\")\13\n\13\nlocal isInitialized, pendingAutoruns = false, {}\13\n\13\nlocal function onInit()\13\n  isInitialized = true\13\n  for _, run in ipairs(pendingAutoruns) do\13\n    local result, reason = pcall(run)\13\n    if not result then\13\n      local path = fs.concat(os.getenv(\"TMPDIR\") or \"/tmp\", \"event.log\")\13\n      local log = io.open(path, \"a\")\13\n      if log then\13\n        log:write(reason .. \"\\n\")\13\n        log:close()\13\n      end\13\n    end\13\n  end\13\n  pendingAutoruns = nil\13\nend\13\n\13\nlocal function onComponentAdded(_, address, componentType)\13\n  if componentType == \"filesystem\" then\13\n    local proxy = component.proxy(address)\13\n    if proxy then\13\n      local name = address:sub(1, 3)\13\n      while fs.exists(fs.concat(\"/mnt\", name)) and\13\n            name:len() < address:len() -- just to be on the safe side\13\n      do\13\n        name = address:sub(1, name:len() + 1)\13\n      end\13\n      name = fs.concat(\"/mnt\", name)\13\n      fs.mount(proxy, name)\13\n      if fs.isAutorunEnabled() then\13\n        local function run()\13\n          local file = shell.resolve(fs.concat(name, \"autorun\"), \"lua\") or\13\n                       shell.resolve(fs.concat(name, \".autorun\"), \"lua\")\13\n          if file then\13\n            local result, reason = shell.execute(file, _ENV, proxy)\13\n            if not result then\13\n              error(reason, 0)\13\n            end\13\n          end\13\n        end\13\n        if isInitialized then\13\n          run()\13\n        else\13\n          table.insert(pendingAutoruns, run)\13\n        end\13\n      end\13\n    end\13\n  end\13\nend\13\n\13\nlocal function onComponentRemoved(_, address, componentType)\13\n  if componentType == \"filesystem\" then\13\n    if fs.get(shell.getWorkingDirectory()).address == address then\13\n      shell.setWorkingDirectory(\"/\")\13\n    end\13\n    fs.umount(address)\13\n  end\13\nend\13\n\13\nevent.listen(\"init\", onInit)\13\nevent.listen(\"component_added\", onComponentAdded)\13\nevent.listen(\"component_removed\", onComponentRemoved)\13\n"},name="autofs",conflicts={},depends={"init"},version="0.1"}